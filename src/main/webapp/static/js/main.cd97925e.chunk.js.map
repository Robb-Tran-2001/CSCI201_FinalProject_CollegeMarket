{"version":3,"sources":["components/Login.js","Paths.js","components/Nav.js","components/Catalog.js","components/User.js","components/Sell.js","components/Router.js","App.js","index.js"],"names":["Login","window","location","host","show","handleClose","updateUser","useState","login","setLogin","form","setForm","formLoading","setFormLoading","Modal","onHide","Header","Body","Form","onChange","event","target","name","value","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","body","username","hashed","SHA256","password","toString","console","info","prefix","fetch","method","headers","JSON","stringify","then","res","status","sessionStorage","setItem","alert","Group","controlId","Label","Control","required","type","placeholder","Row","style","alignItems","Button","className","variant","disabled","cursor","onClick","Nav","setShow","history","useHistory","Navbar","bg","position","expand","Col","md","Brand","as","Link","to","textAlign","Text","push","Catalog","searchitems","items","setItems","page","setPage","useEffect","json","handlePageChange","newPage","scrollTo","catalogTable","slice","map","item","key","itemid","OverlayTrigger","trigger","placement","overlay","Popover","Content","description","width","price","seller","itemId","Container","fluid","length","Table","hover","Math","ceil","Spinner","animation","User","tab","setTab","orders","setOrders","list","span","offset","defaultActiveKey","onSelect","Item","eventKey","e","FormData","get","trim","defaultValue","order","buyer","index","findIndex","handleApprovePurchase","Sell","parseInt","rows","Router","useLocation","Switch","path","state","exact","App","addToast","useToasts","setUsername","u","getItem","socket","SockJS","stompClient","Stomp","over","debug","connect","subscribe","m","data","parse","appearance","disconnect","basename","process","n","ReactDOM","render","StrictMode","autoDismiss","document","getElementById"],"mappings":"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","file":"static/js/main.cd97925e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Modal } from 'react-bootstrap'\nimport { SHA256 } from 'crypto-js'\nimport { LOGIN_SERVICE_ADDRESS, SIGNUP_SERVICE_ADDRESS } from '../Paths'\n\nexport const Login = ({ show, handleClose, updateUser }) => {\n  const [login, setLogin] = useState(true)\n  const [form, setForm] = useState({})\n  const [formLoading, setFormLoading] = useState(false)\n  const toggleLogin = () => setLogin(!login)\n  const handleInput = event => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n  const handleSubmit = event => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (event.currentTarget.checkValidity() === true) {\n      setFormLoading(true)\n      const body = { name: form.username }\n      const hashed = SHA256(form.username + ':' + form.password).toString()\n      body.password = hashed\n      console.info(\n        'POST',\n        login ? LOGIN_SERVICE_ADDRESS : SIGNUP_SERVICE_ADDRESS,\n        body\n      )\n      fetch(login ? LOGIN_SERVICE_ADDRESS : SIGNUP_SERVICE_ADDRESS, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      }).then(res => {\n        if (res.status === 200) {\n          updateUser(form.username)\n          sessionStorage.setItem('username', form.username)\n          setFormLoading(false)\n          handleClose()\n        } else {\n          login\n            ? alert('Invalid email/password!')\n            : alert('User already exists!')\n          setFormLoading(false)\n        }\n      })\n    }\n  }\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header>{login ? 'Log in' : 'Sign up'}</Modal.Header>\n      <Modal.Body>\n        <Form onChange={handleInput} onSubmit={handleSubmit}>\n          <Form.Group controlId='email'>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              name='username'\n              type='text'\n              placeholder='Username'\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              type='password'\n              placeholder='Password'\n            />\n          </Form.Group>\n          <Form.Row style={{ alignItems: 'center' }}>\n            <Button\n              className='mr-auto ml-1'\n              variant='primary'\n              type='submit'\n              disabled={formLoading}\n            >\n              {formLoading ? 'Processing...' : 'Submit'}\n            </Button>\n            <i\n              className='mr-1'\n              style={{ cursor: 'pointer' }}\n              onClick={toggleLogin}\n            >\n              <u>{login ? \"Don't have an account?\" : 'Have an account?'}</u>\n            </i>\n          </Form.Row>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","const prefix =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:3001' : 'api'\n// 'http://127.0.0.1:8080/api'\n\nexport const ALL_ITEMS_SERVICE_ADDRESS = prefix + '/items'\n\nexport const ITEM_DETAIL_SERVICE_ADDRESS = prefix + '/items/' // itemid\n\nexport const SEARCH_SERVICE_ADDRESS = prefix + '/search' // ?q={search terms}\n\nexport const BUY_ITEM_SERVICE_ADDRESS = prefix + '/buy'\n\nexport const CREATE_ITEM_SERVICE_ADDRESS = prefix + '/sell'\n\nexport const LOGIN_SERVICE_ADDRESS = prefix + '/user/login'\n\nexport const SIGNUP_SERVICE_ADDRESS = prefix + '/user/signup'\n\nexport const USER_INFO_SERVICE_ADDRESS = prefix + '/user/' // username\n\nexport const USER_PASSWORD_SERVICE_ADDRESS = prefix + '/user/password'\n\nexport const USER_APPROVE_PURCHASE_SERVICE_ADDRESS = prefix + '/user/approve'\n\nexport const WEBSOCKET_ADDRESS =\n  'ws://' + window.location.host + process.env.PUBLIC_URL + '/api/push/'\n","import React, { useState } from 'react'\nimport { Navbar, Col } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Login } from './Login'\n// import { SEARCH_SERVICE_ADDRESS } from '../Paths'\n\nconst Nav = ({ username, updateUser }) => {\n  const [show, setShow] = useState(false)\n  // const [searchInput, setSearchInput] = useState('')\n  const history = useHistory()\n  const handleClickUser = () => {\n    username ? history.push('/user') : setShow(true)\n  }\n  // const handleSearch = (e) => {\n  //   e.preventDefault()\n  //   e.stopPropagation()\n  //   if (searchInput.trim() === '') return\n  //   console.info(\n  //     'GET ' +\n  //       SEARCH_SERVICE_ADDRESS +\n  //       '?q=' +\n  //       searchInput.trim().replace(' ', '%20')\n  //   )\n  //   fetch(\n  //     SEARCH_SERVICE_ADDRESS + '?q=' + searchInput.trim().replace(' ', '%20')\n  //   )\n  //     .then((res) => res.json())\n  //     .then((res) => {\n  //       if (res.length === 0) {\n  //         alert('No results found!')\n  //         return\n  //       }\n  //       history.push('/', res)\n  //     })\n  // }\n  const handleClose = () => setShow(false)\n\n  return (\n    <>\n      <Navbar bg='primary' position='static' variant='dark' expand>\n        <Col md={3}>\n          <Navbar.Brand as={Link} to='/' className='mr-auto'>\n            USC Marketplace\n          </Navbar.Brand>\n        </Col>\n        <Col md={6}>\n          {/* <Form inline className=\"\" onSubmit={handleSearch}>\n            <FormControl\n              type='text'\n              style={{ width: '90%', marginRight: '-5px' }}\n              placeholder='Search'\n              onChange={e => setSearchInput(e.target.value)}\n            />\n            <Button\n              variant='primary'\n              type='submit'\n              style={{ width: '10%', marginLeft: '-5px', borderRadius: '0px' }}\n            >\n              <ion-icon name='search-outline'></ion-icon>\n            </Button>\n          </Form> */}\n        </Col>\n        <Col md={3} style={{ textAlign: 'right' }}>\n          <Navbar.Text onClick={handleClickUser} style={{ cursor: 'pointer' }}>\n            {username || 'Log in'}\n          </Navbar.Text>\n        </Col>\n      </Navbar>\n      <Login show={show} handleClose={handleClose} updateUser={updateUser} />\n    </>\n  )\n}\n\nexport default Nav\n","import React, { useState, useEffect } from 'react'\nimport {\n  Container,\n  Table,\n  Spinner,\n  Button,\n  OverlayTrigger,\n  Popover,\n} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { ALL_ITEMS_SERVICE_ADDRESS } from '../Paths'\n// import ItemCard from './ItemCard'\n// import { ItemModal } from './ItemModal'\nimport { BUY_ITEM_SERVICE_ADDRESS } from '../Paths'\n\nexport const Catalog = ({ username, searchitems }) => {\n  // const [modalItemID, setModalItemID] = useState(-1)\n  const [items, setItems] = useState(searchitems || [])\n  const [page, setPage] = useState(1)\n  // const handleClick = itemid => {\n  //   setModalItemID(itemid)\n  // }\n\n  const handleBuy = itemid => {\n    console.info('POST ' + BUY_ITEM_SERVICE_ADDRESS, {\n      itemid: itemid,\n      username: username,\n    })\n    fetch(BUY_ITEM_SERVICE_ADDRESS, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        itemid: itemid,\n        username: username,\n      }),\n    }).then(res => {\n      if (res.status === 200) {\n        alert('Successful. Waiting for seller approval now.')\n      } else {\n        alert('Item is not available.')\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (searchitems) return\n    console.info('GET ' + ALL_ITEMS_SERVICE_ADDRESS)\n    fetch(ALL_ITEMS_SERVICE_ADDRESS)\n      .then(res => res.json())\n      .then(res => setItems(res))\n  }, [])\n\n  // const closeModal = useCallback(() => {\n  //   setModalItemID(-1)\n  // }, [])\n\n  const handlePageChange = newPage => {\n    setPage(newPage)\n    window.scrollTo(0, 0)\n  }\n\n  // const itemCards =\n  //   items &&\n  //   items.slice((page - 1) * 20, page * 20).map(item => (\n  //     <Col key={page + '.' + item.itemid}>\n  //       <ItemCard username={username} item={item} handleClick={handleClick} />\n  //     </Col>\n  //   ))\n\n  const catalogTable =\n    items &&\n    items.slice((page - 1) * 20, page * 20).map(item => (\n      <tr key={item.itemid}>\n        <OverlayTrigger\n          trigger='hover'\n          placement='auto-start'\n          overlay={\n            <Popover>\n              <Popover.Content>{item.description}</Popover.Content>\n            </Popover>\n          }\n        >\n          <td style={{ width: '50%' }}>{item.name}</td>\n        </OverlayTrigger>\n        <td style={{ width: '20%' }}>${item.price}</td>\n        <td style={{ width: '20%' }}>{item.seller}</td>\n        {/* <td>{item.description}</td> */}\n        <td style={{ width: '10%' }}>\n          <Button onClick={() => handleBuy(item.itemId)} disabled={!username}>\n            Buy now\n          </Button>\n        </td>\n      </tr>\n    ))\n  return (\n    <>\n      <Container fluid='lg' className='my-5'>\n        {username ? (\n          <Button as={Link} to={'/create'} className='mb-3'>\n            Create new listing\n          </Button>\n        ) : (\n          ''\n        )}\n        {items.length !== 0 ? (\n          <>\n            <Table hover>\n              <thead>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Seller</th>\n                {/* <th>Description</th> */}\n                <th></th>\n              </thead>\n              <tbody>{catalogTable}</tbody>\n            </Table>\n            {page !== 1 ? (\n              <Button\n                onClick={() => handlePageChange(page - 1)}\n                className='mr-3'\n              >\n                Previous\n              </Button>\n            ) : (\n              ''\n            )}\n            {page !== Math.ceil(items.length / 20) ? (\n              <Button onClick={() => handlePageChange(page + 1)}>Next</Button>\n            ) : (\n              ''\n            )}\n          </>\n        ) : (\n          <Spinner\n            animation='border'\n            variant='primary'\n            className='loading-spinner'\n          />\n        )}\n      </Container>\n      {/* <ItemModal username={username} itemid={modalItemID} close={closeModal} /> */}\n    </>\n  )\n}\n","import { SHA256 } from 'crypto-js'\nimport React, { useState, useEffect } from 'react'\nimport { Nav, Row, Col, Form, Button, Table } from 'react-bootstrap'\nimport {\n  USER_INFO_SERVICE_ADDRESS,\n  USER_PASSWORD_SERVICE_ADDRESS,\n  USER_APPROVE_PURCHASE_SERVICE_ADDRESS,\n} from '../Paths'\n\nexport const User = ({ username }) => {\n  const [tab, setTab] = useState('orders')\n  const [orders, setOrders] = useState([])\n  useEffect(() => {\n    console.info('GET', USER_INFO_SERVICE_ADDRESS + username)\n    fetch(USER_INFO_SERVICE_ADDRESS + username)\n      .then(res => res.json())\n      .then(res => {\n        setOrders(res)\n      })\n  }, [username])\n  const handlePasswordChange = e => {\n    e.preventDefault()\n    e.stopPropagation()\n    const form = new FormData(e.target)\n    if (form.get('password').trim() === '') {\n      alert('Please enter a valid password')\n      return\n    }\n    console.info('PUT', USER_PASSWORD_SERVICE_ADDRESS, {\n      username: username,\n      password: SHA256(username + ':' + form.get('password')).toString(),\n    })\n    fetch(USER_PASSWORD_SERVICE_ADDRESS, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: username,\n        password: SHA256(username + ':' + form.get('password')).toString(),\n      }),\n    }).then(res => {\n      if (res.status === 200) {\n        alert('Password changed successfully!')\n      } else {\n        alert('An error has occured! Please try again.')\n      }\n    })\n  }\n  const handleApprovePurchase = order => {\n    console.info('POST', USER_APPROVE_PURCHASE_SERVICE_ADDRESS, {\n      username: username,\n      itemid: order.itemid,\n    })\n    fetch(USER_APPROVE_PURCHASE_SERVICE_ADDRESS, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        seller: username,\n        buyer: order.buyer,\n        itemid: order.itemid,\n      }),\n    }).then(res => {\n      if (res.status === 200) {\n        alert('Successful')\n        const index = orders.findIndex(e => e.itemid === order.itemid)\n        setOrders([...orders.slice(0, index), ...orders.slice(index + 1)])\n      } else {\n        alert('An error has occured.')\n      }\n    })\n  }\n\n  const orderTable = list =>\n    list &&\n    list.map(order => (\n      <tr key={order.itemid}>\n        <td>{order.name}</td>\n        <td>${order.price}</td>\n        <td>{order.buyer}</td>\n        <td>\n          <Button onClick={() => handleApprovePurchase(order)}>Approve</Button>\n        </td>\n      </tr>\n    ))\n  return (\n    <>\n      <Row className='mt-5'>\n        <Col md={{ span: 2, offset: 1 }}>\n          <Nav\n            variant='pills'\n            defaultActiveKey='orders'\n            className='flex-column'\n            onSelect={key => setTab(key)}\n          >\n            <Nav.Item>\n              <Nav.Link eventKey='orders'>Requests</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey='password'>Change password</Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Col>\n        <Col md={{ span: 6 }} className='ml-5'>\n          {tab === 'password' ? (\n            <>\n              <h3>Change password</h3>\n              <Form onSubmit={handlePasswordChange}>\n                <Form.Group controlId='name'>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='Enter your name'\n                    defaultValue={username}\n                    disabled\n                  />\n                </Form.Group>\n                <Form.Group controlId='password'>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type='password'\n                    placeholder='Password'\n                    name='password'\n                  />\n                </Form.Group>\n                <Button variant='primary' type='submit'>\n                  Save changes\n                </Button>\n              </Form>\n            </>\n          ) : (\n            <>\n              <h3>Incoming Requests</h3>\n              <Table>\n                <thead>\n                  <th>Name</th>\n                  <th>Price</th>\n                  <th>Buyer</th>\n                  <th>Status</th>\n                </thead>\n                <tbody>{orderTable(orders)}</tbody>\n              </Table>\n            </>\n          )}\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Container, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\nimport { CREATE_ITEM_SERVICE_ADDRESS } from '../Paths'\nexport const Sell = ({ username }) => {\n  const [form, setForm] = useState({})\n  const [formLoading, setFormLoading] = useState(false)\n  const history = useHistory()\n  //   const handlePictures = ()\n  const handleInput = event => {\n    // if (event.target.name === 'picture') {\n    //   setForm({ ...form, pictures: event.target.files })\n    // } else {\n    if (event.target.name === 'price') {\n      setForm({ ...form, [event.target.name]: parseInt(event.target.value) })\n    } else {\n      setForm({ ...form, [event.target.name]: event.target.value })\n    }\n    // }\n  }\n  // const validateFile = () => {\n  //   const allowedExtensions = /[a-zA-Z0-9]+\\.(jpg|png|jpeg)$/i\n  //   console.log(form.pictures)\n  //   for (let i = 0; i < form.pictures.length; i++) {\n  //     if (!allowedExtensions.test(form.pictures[i].name)) {\n  //       alert('Please upload valid pictures!')\n  //       return false\n  //     }\n  //   }\n  //   return true\n  // }\n  // const handleSubmit = event => {\n  //   event.preventDefault()\n  //   event.stopPropagation()\n  //   if (event.currentTarget.checkValidity() && validateFile()) {\n  //     setFormLoading(true)\n  //     const data = new FormData(event.target)\n  //     console.info('POST', CREATE_ITEM_SERVICE_ADDRESS)\n  //     for (var pair of data.entries()) {\n  //       console.log(pair[0] + ' - ' + pair[1])\n  //     }\n  //     fetch(CREATE_ITEM_SERVICE_ADDRESS, {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'multipart/formdata',\n  //       },\n  //       body: data,\n  //     }).then(res => {\n  //       if (res.status === 200) {\n  //         history.push('/')\n  //       } else {\n  //         alert('An error has occured.')\n  //       }\n  //       setFormLoading(false)\n  //     })\n  //   }\n  // }\n  const handleSubmit = event => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (event.currentTarget.checkValidity()) {\n      setFormLoading(true)\n      // const data = new FormData(event.target)\n      console.info('POST', CREATE_ITEM_SERVICE_ADDRESS, form)\n      // for (var pair of data.entries()) {\n      //   console.log(pair[0] + ' - ' + pair[1])\n      // }\n      fetch(CREATE_ITEM_SERVICE_ADDRESS, {\n        method: 'POST',\n        headers: {\n          // 'Content-Type': 'multipart/formdata',\n          'Content-Type': 'application/json',\n        },\n        // body: data,\n        body: JSON.stringify({ ...form, username: username }),\n      }).then(res => {\n        if (res.status === 200) {\n          alert('Successful')\n          history.push('/')\n        } else {\n          alert('An error has occured.')\n        }\n        setFormLoading(false)\n      })\n    }\n  }\n  return (\n    <Container fluid='md' className='mt-4'>\n      <h2>Create new listing</h2>\n      <Form onChange={handleInput} onSubmit={handleSubmit}>\n        <Form.Group controlId='name'>\n          <Form.Label>Title</Form.Label>\n          <Form.Control type='text' name='name' required />\n        </Form.Group>\n        <Form.Group controlId='price'>\n          <Form.Label>Price</Form.Label>\n          <Form.Control type='number' name='price' required />\n        </Form.Group>\n        {/* <Form.Group controlId='picture'>\n          <Form.File name='picture' multiple required label='Pictures' />\n        </Form.Group> */}\n        <Form.Group controlId='description'>\n          <Form.Label>Description</Form.Label>\n          <Form.Control as='textarea' rows={5} name='description' required />\n        </Form.Group>\n        <Button type='submit' disabled={formLoading}>\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  )\n}\nnew FormData()\n","import { Route, useLocation } from 'react-router-dom'\nimport React from 'react'\nimport Switch from 'react-bootstrap/esm/Switch'\nimport { Catalog } from './Catalog'\nimport { User } from './User'\nimport { Sell } from './Sell'\n\nexport const Router = ({ username }) => {\n  const location = useLocation()\n  return (\n    <Switch className='p-0'>\n      {username && (\n        <Switch>\n          <Route path='/user'>\n            <User username={username} />\n          </Route>\n          <Route path='/create'>\n            <Sell username={username} />\n          </Route>\n        </Switch>\n      )}\n      {location.state ? (\n        <Catalog username={username} searchitems={location.state} />\n      ) : (\n        <Route path='/' exact>\n          <Catalog username={username} />\n        </Route>\n      )}\n    </Switch>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport Nav from './components/Nav'\nimport './App.scss'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Router } from './components/Router'\nimport { useToasts } from 'react-toast-notifications'\n// import { WEBSOCKET_ADDRESS } from './Paths'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\n\nfunction App() {\n  const { addToast } = useToasts()\n  const [username, setUsername] = useState(null)\n  useEffect(() => {\n    const u = sessionStorage.getItem('username')\n    if (u === username) return\n    setUsername(u)\n  }, [])\n  const updateUsername = n => setUsername(n)\n\n  useEffect(() => {\n    // if (!username) {\n    //   return\n    // }\n    // console.info('Connecting to push')\n    // console.info(WEBSOCKET_ADDRESS)\n\n    var socket = new SockJS('/push_notif')\n    const stompClient = Stomp.over(socket)\n    stompClient.debug = () => {}\n    stompClient.connect({}, function () {\n      stompClient.subscribe('/topic/messages', function (m) {\n        const data = JSON.parse(m.body)\n        addToast(data.buyer + ' just bought ' + data.item + '!', {\n          appearance: 'info',\n        })\n      })\n    })\n    return () => {\n      stompClient.disconnect()\n    }\n  }, [addToast])\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Nav username={username} updateUser={updateUsername} />\n      <Router username={username} />\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ToastProvider } from 'react-toast-notifications'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider placement='top-center' autoDismiss={true}>\n      <App />\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}