{"version":3,"sources":["recoil/atoms.js","components/Login.js","Paths.js","components/Nav.js","components/ItemCard.js","components/ItemModal.js","components/Catalog.js","components/User.js","components/Sell.js","components/Router.js","App.js","index.js"],"names":["currentItemState","atom","key","default","isAuthorizedState","usernameState","Login","show","handleClose","setUsername","useSetRecoilState","setAuthorized","useState","login","setLogin","form","setForm","formLoading","setFormLoading","Modal","onHide","Header","Body","Form","onChange","event","target","name","value","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","body","email","hashed","SHA256","password","toString","hash","fetch","prefix","method","headers","JSON","stringify","then","res","json","sessionStorage","setItem","token","catch","err","alert","Group","controlId","Label","Control","required","type","placeholder","Feedback","Row","style","alignItems","Button","className","variant","disabled","cursor","onClick","Nav","setShow","searchInput","setSearchInput","history","useHistory","setCurrItem","IsAuthorized","useRecoilValue","Username","Navbar","bg","position","expand","Col","md","Brand","as","Link","to","inline","e","trim","SEARCH_SERVICE_ADDRESS","replace","length","FormControl","width","marginRight","marginLeft","borderRadius","textAlign","Text","push","ItemCard","item","handleClick","hover","setHover","buyAttempted","setBuyAttempted","Card","marginTop","itemid","onMouseEnter","onMouseLeave","backgroundImage","pic","top","right","Title","price","marginBottom","ItemModal","close","loaded","setLoaded","carouselItems","image","map","element","index","Carousel","Item","src","alt","CloseButton","fontSize","useEffect","animation","dialogAs","Container","fluid","interval","slide","description","seller","Spinner","Catalog","modalItemID","setModalItemID","useRecoilState","Items","setItems","page","setPage","handlePageChange","newPage","window","scrollTo","itemCards","slice","xs","Math","ceil","User","tab","setTab","username","setEmail","orders","setOrders","getItem","console","log","profile","orderTable","list","order","status","span","offset","defaultActiveKey","onSelect","eventKey","defaultValue","Table","buy","sell","Sell","files","pictures","allowedExtensions","i","test","validateFile","data","FormData","File","multiple","label","rows","Router","Switch","path","exact","App","addToast","useToasts","process","ws","WebSocket","onmessage","parse","msg","appearance","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af4e2c41.chunk.js","sourcesContent":["import { atom } from 'recoil'\n\nexport const currentItemState = atom({\n  key: 'todoListState',\n  default: [],\n})\n\nexport const isAuthorizedState = atom({\n  key: 'isAuthorizedState',\n  default: false,\n})\n\nexport const usernameState = atom({\n  key: 'usernameState',\n  default: '',\n})\n","import React, { useState } from 'react'\nimport { Form, Button, Row, Modal } from 'react-bootstrap'\nimport { SHA256 } from 'crypto-js'\nimport { useSetRecoilState } from 'recoil'\nimport { isAuthorizedState, jwtState, usernameState } from '../recoil/atoms'\nimport { LOGIN_SERVICE_ADDRESS, SIGNUP_SERVICE_ADDRESS } from '../Paths'\n\nexport const Login = ({ show, handleClose }) => {\n  const setUsername = useSetRecoilState(usernameState)\n  const setAuthorized = useSetRecoilState(isAuthorizedState)\n  //   const setToken = useSetRecoilState(jwtState)\n\n  const [login, setLogin] = useState(true)\n  const [form, setForm] = useState({})\n  const [formLoading, setFormLoading] = useState(false)\n  const toggleLogin = () => setLogin(!login)\n  const handleInput = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (event.currentTarget.checkValidity() === true) {\n      setFormLoading(true)\n      const body = { email: form.email }\n      const hashed = SHA256(form.email + ':' + form.password).toString()\n      body.hash = hashed\n      if (!login) {\n        body.name = form.name\n      }\n      fetch(login ? LOGIN_SERVICE_ADDRESS : SIGNUP_SERVICE_ADDRESS, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          sessionStorage.setItem('username', res.name)\n          setUsername(res.name)\n          sessionStorage.setItem('token', res.token)\n          //   setToken(res.token)\n          setAuthorized(true)\n          setFormLoading(false)\n          handleClose()\n        })\n        .catch((err) => {\n          alert('Invalid email/password!')\n          setFormLoading(false)\n        })\n    }\n  }\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header>{login ? 'Log in' : 'Sign up'}</Modal.Header>\n      <Modal.Body>\n        <Form onChange={handleInput} onSubmit={handleSubmit}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter email\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid email\n            </Form.Control.Feedback>\n          </Form.Group>\n          {login ? (\n            ''\n          ) : (\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" placeholder=\"Name\" />\n            </Form.Group>\n          )}\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Form.Row style={{ alignItems: 'center' }}>\n            <Button\n              className=\"mr-auto ml-1\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={formLoading}\n            >\n              {formLoading ? 'Processing...' : 'Submit'}\n            </Button>\n            <i\n              className=\"mr-1\"\n              style={{ cursor: 'pointer' }}\n              onClick={toggleLogin}\n            >\n              <u>{login ? \"Don't have an account?\" : 'Have an account?'}</u>\n            </i>\n          </Form.Row>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","const public_url = 'marketplace-service'\n\nconst prefix =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:3001' : public_url\n\nexport const ALL_ITEMS_SERVICE_ADDRESS = prefix + '/items'\n\nexport const ITEM_DETAIL_SERVICE_ADDRESS = prefix + '/item/' // itemid\n\nexport const LOGIN_SERVICE_ADDRESS = prefix + '/login'\n\nexport const SIGNUP_SERVICE_ADDRESS = prefix + '/signup'\n\nexport const SEARCH_SERVICE_ADDRESS = prefix + '/search' // ?q={search terms}\n\nexport const USER_INFO_SERVICE_ADDRESS = prefix + '/user?token=' // token\n\nexport const CREATE_ITEM_SERVICE_ADDRESS = prefix + '/create'\n","import React, { useState } from 'react'\nimport { Navbar, Form, FormControl, Button, Col } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n  currentItemState,\n  isAuthorizedState,\n  usernameState,\n} from '../recoil/atoms'\nimport { Login } from './Login'\nimport { SEARCH_SERVICE_ADDRESS } from '../Paths'\n\nconst Nav = () => {\n  const [show, setShow] = useState(false)\n  const [searchInput, setSearchInput] = useState('')\n  const history = useHistory()\n  const setCurrItem = useSetRecoilState(currentItemState)\n  const handleClickUser = () => {\n    if (!IsAuthorized) {\n      setShow(true)\n    } else {\n      history.push('/user')\n    }\n  }\n  const handleSearch = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (searchInput.trim() === '') return\n    fetch(\n      SEARCH_SERVICE_ADDRESS + '?q=' + searchInput.trim().replace(' ', '%20')\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.length === 0) {\n          alert('No results found!')\n          return\n        }\n        setCurrItem(res)\n      })\n  }\n  const handleClose = () => setShow(false)\n  const IsAuthorized = useRecoilValue(isAuthorizedState)\n  const Username = useRecoilValue(usernameState)\n\n  return (\n    <>\n      <Navbar bg=\"primary\" position=\"static\" variant=\"dark\" expand>\n        <Col md={3}>\n          <Navbar.Brand as={Link} to=\"/\" className=\"mr-auto\">\n            USC Marketplace\n          </Navbar.Brand>\n        </Col>\n        <Col md={6}>\n          <Form inline className=\"\" onSubmit={handleSearch}>\n            <FormControl\n              type=\"text\"\n              style={{ width: '90%', marginRight: '-5px' }}\n              placeholder=\"Search\"\n              onChange={(e) => setSearchInput(e.target.value)}\n            />\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              style={{ width: '10%', marginLeft: '-5px', borderRadius: '0px' }}\n            >\n              <ion-icon name=\"search-outline\"></ion-icon>\n            </Button>\n          </Form>\n        </Col>\n        <Col md={3} style={{ textAlign: 'right' }}>\n          <Navbar.Text onClick={handleClickUser} style={{ cursor: 'pointer' }}>\n            {!IsAuthorized ? 'Log in' : Username}\n          </Navbar.Text>\n        </Col>\n      </Navbar>\n      <Login show={show} handleClose={handleClose} />\n    </>\n  )\n}\n\nexport default Nav\n","import React, { useState } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { useRecoilValue } from 'recoil'\nimport { isAuthorizedState } from '../recoil/atoms'\nimport { buyItem } from './UserActions'\n\nconst ItemCard = ({ item, handleClick }) => {\n  const [hover, setHover] = useState(false)\n  const IsAuthorized = useRecoilValue(isAuthorizedState)\n  const [buyAttempted, setBuyAttempted] = useState(false)\n  const handleBuy = (e) => {\n    e.stopPropagation()\n    setBuyAttempted(true)\n  }\n  return (\n    <Card\n      style={{\n        marginTop: 30,\n        marginLeft: 15,\n        marginRight: 15,\n        cursor: 'pointer',\n      }}\n      onClick={() =>\n        handleClick(process.env.NODE_ENV === 'production' ? item.itemid : '')\n      }\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div className=\"square\" style={{ backgroundImage: `url(${item.pic})` }}>\n        {IsAuthorized ? (\n          <div className=\"cardImageOverlay\">\n            {hover ? (\n              <Button\n                style={{\n                  position: 'absolute',\n                  top: 0,\n                  right: 0,\n                  borderRadius: 10,\n                  marginTop: 5,\n                  marginRight: 5,\n                }}\n                onClick={handleBuy}\n                disabled={buyAttempted}\n              >\n                {buyAttempted ? 'Pending' : 'Buy'}\n              </Button>\n            ) : (\n              ''\n            )}\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <Card.Body>\n        <Card.Title style={{ marginTop: 10 }}>${item.price}</Card.Title>\n        <Card.Text style={{ marginBottom: 10 }}>{item.name}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default ItemCard\n","import React, { useState, useEffect } from 'react'\nimport {\n  Modal,\n  Row,\n  Col,\n  Spinner,\n  Carousel,\n  Container,\n  Image,\n  Button,\n} from 'react-bootstrap'\nimport { useRecoilValue } from 'recoil'\nimport { isAuthorizedState } from '../recoil/atoms'\nimport { ITEM_DETAIL_SERVICE_ADDRESS } from '../Paths'\nexport const ItemModal = ({ itemid, close }) => {\n  const [loaded, setLoaded] = useState(false)\n  const [item, setItem] = useState(null)\n  const IsAuthorized = useRecoilValue(isAuthorizedState)\n  const [buyAttempted, setBuyAttempted] = useState(false)\n  const handleBuy = () => {\n    setBuyAttempted(true)\n  }\n  const carouselItems =\n    item &&\n    item.image.map((element, index) => (\n      <Carousel.Item key={index}>\n        <img className=\"d-block w-100\" src={element} alt={index} />\n      </Carousel.Item>\n    ))\n  const CloseButton = () => (\n    <div className=\"modal-close-button\" onClick={close}>\n      <ion-icon style={{ fontSize: 64 }} name=\"close-outline\"></ion-icon>\n    </div>\n  )\n\n  useEffect(() => {\n    if (itemid === -1) return\n    fetch(ITEM_DETAIL_SERVICE_ADDRESS + itemid)\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          setItem(res)\n          setLoaded(true)\n        },\n        (err) => {\n          alert('Loading failed', err)\n          close()\n        }\n      )\n  }, [itemid, close])\n  return (\n    <Modal show={itemid !== -1} onHide={close} animation={false} dialogAs=\"div\">\n      <CloseButton />\n      {loaded ? (\n        <Container fluid>\n          <Row>\n            <Col md={8}>\n              <Carousel\n                interval={null}\n                slide={false}\n                className=\"carousel-container\"\n              >\n                {carouselItems}\n              </Carousel>\n            </Col>\n            <Col md={4}>\n              <Container fluid className=\"desc-container\">\n                <h2>\n                  <b>{item.name}</b>\n                </h2>\n                <h4>${item.price}</h4>\n                <br />\n                <h5>\n                  <b>Details</b>\n                </h5>\n                <p>{item.description}</p>\n                <br />\n                <h5>\n                  <b>Seller</b>\n                </h5>\n                <p>\n                  <b>{item.seller}</b>\n                </p>\n                {IsAuthorized ? (\n                  <Button className=\"buy-button\" disabled={buyAttempted}>\n                    {buyAttempted ? 'Pending' : 'Buy now'}\n                  </Button>\n                ) : (\n                  <Button disabled className=\"buy-button\">\n                    Log in to buy\n                  </Button>\n                )}\n              </Container>\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        <Spinner\n          animation=\"border\"\n          variant=\"primary\"\n          className=\"loading-spinner\"\n        />\n      )}\n    </Modal>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Spinner, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { ALL_ITEMS_SERVICE_ADDRESS } from '../Paths'\nimport {\n  currentItemState,\n  isAuthorizedState,\n  usernameState,\n} from '../recoil/atoms'\nimport ItemCard from './ItemCard'\nimport { ItemModal } from './ItemModal'\n\nexport const Catalog = () => {\n  const [modalItemID, setModalItemID] = useState(-1)\n  const [Items, setItems] = useRecoilState(currentItemState)\n  const [page, setPage] = useState(1)\n  const IsAuthorized = useRecoilValue(isAuthorizedState)\n  const handleClick = (itemid) => {\n    setModalItemID(itemid)\n  }\n  useEffect(() => {\n    fetch(ALL_ITEMS_SERVICE_ADDRESS)\n      .then((res) => res.json())\n      .then((res) => setItems(res))\n  }, [])\n\n  const closeModal = () => {\n    setModalItemID(-1)\n  }\n\n  const handlePageChange = (newPage) => {\n    setPage(newPage)\n    window.scrollTo(0, 0)\n  }\n\n  const itemCards =\n    Items &&\n    Items.slice((page - 1) * 20, page * 20).map((item) => (\n      <Col key={page + '.' + item.itemid}>\n        <ItemCard item={item} handleClick={handleClick} />\n      </Col>\n    ))\n  return (\n    <>\n      <Container fluid=\"lg\" className=\"my-4\">\n        {IsAuthorized ? (\n          <Button as={Link} to={'/create'}>\n            Create new listing\n          </Button>\n        ) : (\n          ''\n        )}\n        {Items.length !== 0 ? (\n          <>\n            <Row xs={2} md={4}>\n              {itemCards}\n            </Row>\n            {page !== 1 ? (\n              <Button\n                onClick={() => handlePageChange(page - 1)}\n                className=\"mr-3\"\n              >\n                Previous\n              </Button>\n            ) : (\n              ''\n            )}\n            {page !== Math.ceil(Items.length / 20) ? (\n              <Button onClick={() => handlePageChange(page + 1)}>Next</Button>\n            ) : (\n              ''\n            )}\n          </>\n        ) : (\n          <Spinner\n            animation=\"border\"\n            variant=\"primary\"\n            className=\"loading-spinner\"\n          />\n        )}\n      </Container>\n      <ItemModal itemid={modalItemID} close={closeModal} />\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Nav, Row, Col, ListGroup, Form, Button, Table } from 'react-bootstrap'\nimport { useRecoilValue } from 'recoil'\nimport { USER_INFO_SERVICE_ADDRESS } from '../Paths'\nimport { usernameState } from '../recoil/atoms'\nimport { ItemModal } from './ItemModal'\n\nexport const User = () => {\n  const [tab, setTab] = useState('profile')\n  const username = useRecoilValue(usernameState)\n  const [email, setEmail] = useState('')\n  const [orders, setOrders] = useState([])\n  const [modalItemID, setModalItemID] = useState(-1)\n  const handleClose = () => setModalItemID(-1)\n  const handleClick = (itemid) => setModalItemID(itemid)\n  useEffect(() => {\n    fetch(USER_INFO_SERVICE_ADDRESS + sessionStorage.getItem('token'))\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res)\n        setEmail(res.profile.email)\n        setOrders(res.orders)\n      })\n  }, [])\n  const orderTable = (list) =>\n    list.map((order) => (\n      <tr\n        key={order.itemid}\n        onClick={() => handleClick(order.itemid)}\n        style={{ cursor: 'pointer' }}\n      >\n        <td>{order.name}</td>\n        <td>${order.price}</td>\n        <td>{order.seller}</td>\n        <td>{order.status ? 'Complete' : 'Pending'}</td>\n      </tr>\n    ))\n  return (\n    <>\n      <Row className=\"mt-5\">\n        <Col md={{ span: 2, offset: 1 }}>\n          <Nav\n            variant=\"pills\"\n            defaultActiveKey=\"profile\"\n            className=\"flex-column\"\n            onSelect={(key) => setTab(key)}\n          >\n            <Nav.Item>\n              <Nav.Link eventKey=\"profile\">Profile</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"orders\">My Orders</Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Col>\n        <Col md={{ span: 6 }} className=\"ml-5\">\n          {tab === 'profile' ? (\n            <Form>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  defaultValue={email}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter your name\"\n                  defaultValue={username}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Save changes\n              </Button>\n            </Form>\n          ) : (\n            <>\n              <h3>Your purchases: </h3>\n              <Table>\n                <thead>\n                  <th>Name</th>\n                  <th>Price</th>\n                  <th>Seller</th>\n                  <th>Status</th>\n                </thead>\n                <tbody>{orderTable(orders.buy)}</tbody>\n              </Table>\n              <h3>Your listings: </h3>\n              <Table>\n                <thead>\n                  <th>Name</th>\n                  <th>Price</th>\n                  <th>Seller</th>\n                  <th>Status</th>\n                </thead>\n                <tbody>{orderTable(orders.sell)}</tbody>\n              </Table>\n            </>\n          )}\n        </Col>\n      </Row>\n      <ItemModal itemid={modalItemID} close={handleClose} />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Container, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\nimport { CREATE_ITEM_SERVICE_ADDRESS } from '../Paths'\nexport const Sell = () => {\n  const [form, setForm] = useState({})\n  const [formLoading, setFormLoading] = useState(false)\n  const history = useHistory()\n  //   const handlePictures = ()\n  const handleInput = (event) => {\n    console.log(event.target.name)\n    if (event.target.name === 'picture') {\n      console.log(event.target.files)\n      setForm({ ...form, pictures: event.target.files })\n    } else {\n      setForm({ ...form, [event.target.name]: event.target.value })\n    }\n  }\n  const validateFile = () => {\n    const allowedExtensions = /[a-zA-Z0-9]+\\.(jpg|png|jpeg)$/i\n    console.log(form.pictures)\n    for (let i = 0; i < form.pictures.length; i++) {\n      console.log(form.pictures[i].name)\n      if (!allowedExtensions.test(form.pictures[i].name)) {\n        alert('Please upload valid pictures!')\n        return false\n      }\n    }\n    return true\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (event.currentTarget.checkValidity() && validateFile()) {\n      setFormLoading(true)\n      const data = new FormData(event.target)\n      fetch(CREATE_ITEM_SERVICE_ADDRESS, {\n        method: 'POST',\n        body: data,\n      }).then((res) => {\n        if (res.status === 200) {\n          history.push('/')\n        } else {\n          alert('An error has occured.')\n        }\n      })\n    }\n  }\n\n  return (\n    <Container fluid=\"md\" className=\"mt-4\">\n      <h2>Create new listing</h2>\n      <Form onChange={handleInput} onSubmit={handleSubmit}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" name=\"title\" required />\n        </Form.Group>\n        <Form.Group controlId=\"price\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control type=\"number\" name=\"price\" required />\n        </Form.Group>\n        <Form.Group controlId=\"picture\">\n          <Form.File name=\"picture\" multiple required label=\"Pictures\" />\n        </Form.Group>\n        <Form.Group controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control as=\"textarea\" rows={5} name=\"description\" required />\n        </Form.Group>\n        <input\n          type=\"hidden\"\n          name=\"token\"\n          value={sessionStorage.getItem('token')}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </Container>\n  )\n}\nnew FormData()\n","import { Route } from 'react-router-dom'\nimport React from 'react'\nimport Switch from 'react-bootstrap/esm/Switch'\nimport { Catalog } from './Catalog'\nimport { User } from './User'\nimport { useRecoilValue } from 'recoil'\nimport { isAuthorizedState } from '../recoil/atoms'\nimport { Sell } from './Sell'\n\nexport const Router = () => {\n  const IsAuthorized = useRecoilValue(isAuthorizedState)\n  return (\n    <Switch className=\"p-0\">\n      {IsAuthorized && (\n        <Switch>\n          <Route path=\"/user\">\n            <User />\n          </Route>\n          <Route path=\"/create\">\n            <Sell />\n          </Route>\n        </Switch>\n      )}\n      <Route path=\"/\" exact>\n        <Catalog />\n      </Route>\n    </Switch>\n  )\n}\n","import React, { useEffect } from 'react'\nimport Nav from './components/Nav'\nimport './App.scss'\nimport { useRecoilState, useSetRecoilState } from 'recoil'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Router } from './components/Router'\nimport { useToasts } from 'react-toast-notifications'\nimport { isAuthorizedState, usernameState } from './recoil/atoms'\nfunction App() {\n  const setAuthorized = useSetRecoilState(isAuthorizedState)\n  const [Username, setUsername] = useRecoilState(usernameState)\n  const { addToast } = useToasts()\n\n  if (sessionStorage.getItem('token')) {\n    setAuthorized(true)\n    setUsername(sessionStorage.getItem('username'))\n  }\n  useEffect(() => {\n    console.log(process.env.NODE_ENV)\n    if (Username === '') {\n      return\n    }\n    const ws = new WebSocket(\n      'ws://localhost:8080/push_notification_v1/push/' + Username\n    )\n    ws.onmessage = (event) => {\n      addToast(JSON.parse(event.data.msg), { appearance: 'info' })\n    }\n    return () => {\n      ws.close()\n    }\n  }, [Username])\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Nav />\n      <Router />\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { RecoilRoot } from 'recoil'\nimport App from './App'\nimport { ToastProvider } from 'react-toast-notifications'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ToastProvider>\n        <App />\n      </ToastProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}